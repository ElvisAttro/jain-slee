<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "JSLEE_Twiddle_User_Guide.ent">%BOOK_ENTITIES;]>
<section id="service">

	<title>service</title>
	<para><literal>service</literal> command interacts with <literal>javax.slee.management:name=ServiceManagement</literal>
		MBean. It is standard
		<acronym>JSLEE</acronym> MBean. <literal>service</literal> command allows to perform basic management operations on services
		, like activation, deactivation, state query   . It supports following operations:</para>
		<table frame="all" pgwide="1">
			<title>Operations table for <literal>service</literal> command</title>
			<tgroup colsep="1" cols="5">
				<colspec colnum="1" colname="c0" />
				<colspec colnum="2" colname="c1" />
				<colspec colnum="3" colname="c2" />
				<colspec colnum="4" colname="c3" />
				<thead>
					<row>
						<entry>Operation</entry>
						<entry>Short form</entry>
						<entry>Long form</entry>
						<entry>Argument</entry>
						<entry>Options</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>activate</entry>
						<entry>-a</entry>
						<entry>--activate</entry>
						<entry>yes</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry>deactivate</entry>
						<entry>-d</entry>
						<entry>--deactivate</entry>
						<entry>Yes</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry>deactivate-and-activate</entry>
						<entry>-c</entry>
						<entry>--deactivate-and-activate</entry>
						<entry>No</entry>
						<entry>Yes</entry>
					</row>
					<row>
						<entry>services</entry>
						<entry>-i</entry>
						<entry>--services</entry>
						<entry>Yes</entry>
						<entry>No</entry>
					</row>
					<row>
						<entry>state</entry>
						<entry>-o</entry>
						<entry>--state</entry>
						<entry>Yes</entry>
						<entry>No</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	<section id="service_activate">
		<title>activate</title>
		<para><literal>activate</literal> operation simply activates inactive service(Container will inform instance by emiting proper event). It does not support options. It requires ServiceID as argument, it accepts array of ServiceIDs as argument:</para>
		<example>
			<title>Activate service</title>
			<!-- <screen> --><programlisting>
./twiddle.sh service \
-aServiceID[name=My_Service_Name,vendor=test_dummy_inc,version=1.0]<!-- </screen> --></programlisting>
		</example>
		<example>
			<title>Activate services</title>
			<!-- <screen> --><programlisting>
./twiddle.sh service \
-aServiceID[name=My_Service_Name,vendor=test_dummy_inc,version=1.0];\
ServiceID[name=My_Service_Name2,vendor=spartan_dummy_inc,version=1.0]<!-- </screen> --></programlisting>
		</example>
	</section>	
	<section id="service_deactivate">
		<title>deactivate</title>
		<para><literal>deactivate</literal> operation simply deactivates active service(Container will inform instance by emiting proper event). It does not support options. It requires ServiceID as argument, it accepts array of ServiceIDs as argument:</para>
		<example>
			<title>Deactivate service </title>
			<!-- <screen> --><programlisting>
./twiddle.sh service \
-dServiceID[name=My_Service_Name,vendor=test_dummy_inc,version=1.0]<!-- </screen> --></programlisting>
		</example>
		<example>
			<title>Deactivate services </title>
			<!-- <screen> --><programlisting>
./twiddle.sh service \
-dServiceID[name=My_Service_Name,vendor=test_dummy_inc,version=1.0];\
ServiceID[name=X_Service,vendor=test_dummy_inc,version=1.0]<!-- </screen> --></programlisting>
		</example>
	</section>	
	<section id="service_deactivate_and_activate">
		<title>deactivate-and-activate</title>
		<para><literal>deactivate-and-activate</literal> operation deactivates and activates certain set of services(order of options does not affect order of container operations). It does not support argument, it requires options to specify services sets: </para>
		<variablelist>
			<varlistentry>
				<term>--ta</term>
				<listitem><para>specifies set of services to activate. Requires ServiceID as argument( accepts array argument also ).</para></listitem>
			</varlistentry>
			<varlistentry>
				<term>--td</term>
				<listitem><para>specifies set of services to deactivate. Requires ServiceID as argument( accepts array argument also ).</para></listitem>
			</varlistentry>
			
		</variablelist>
		<example>
			<title>Deactivate and activate services </title>
			<!-- <screen> --><programlisting>
./twiddle.sh service -c \
--ta=ServiceID[name=My_Service_Name,vendor=test_dummy_inc,version=1.0]\
;ServiceID[name=X_Service,vendor=test_dummy_inc,version=1.0]\
--td=ServiceID[name=My_Service_Name,vendor=test_dummy_inc,version=1.0]<!-- </screen> --></programlisting>
		</example>
	</section>	
	<section id="service_services">
		<title>services</title>
		<para><literal>services</literal> operation lists services in given state. Does not support options. Requires valid service state as argument. 
		Service can be either <replaceable>Active</replaceable> or <replaceable>Inactive</replaceable></para>
		<variablelist>
			<varlistentry>
				<term> </term>
				<listitem><para></para></listitem>
			</varlistentry>
		</variablelist>
		
	</section>	
	<section id="service_state">
		<title>state</title>
		<para><literal>state</literal> operation queries container about state of service. It does not support options. It requires ServiceID as argument.</para>
		<variablelist>
			<varlistentry>
				<term> </term>
				<listitem><para></para></listitem>
			</varlistentry>
		</variablelist>
	</section>	
		
</section>	
	


