<?xml version="1.0"?>
<project name="restcomm.release" default="release-wildfly" basedir=".">

	<property environment="sys" />

	<property name="output.dir" value="${basedir}/target" />
	<property name="release.dir" value="${output.dir}/binary" />
	<property name="packages.dir" value="${basedir}/checkout" />
	<property name="tmp.dir" value="${output.dir}/tmp" />

	<property name="release.profile" value="restcomm" />
	<property name="release.version" value="3.0.0" />
	<property name="jslee.version" value="3.0.0" />

	<property name="jboss.config" value="standalone" />

	<property name="wildfly.version" value="10.1.0.Final" />
	<property name="wildfly.name" value="wildfly" />

	<property name="wildfly.distro.zip.path" value="${wildfly.name}-${wildfly.version}.zip" />
	<property name="wildfly.home.relative.path" value="${wildfly.name}-${wildfly.version}/" />
	<property name="wildfly.home" value="${release.dir}/${wildfly.home.relative.path}/" />
	<available file="${ant.file.restcomm.release}/../${wildfly.distro.zip.path}" property="got.wildfly" />

	<property name="h2.version" value="1.4.193" />
	<property name="h2.distro.jar.path" value="h2-${h2.version}.jar" />
	<available file="${ant.file.restcomm.release}/../${h2.distro.jar.path}" property="got.h2" />

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.file.restcomm.release}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat">
		<and>
			<os family="windows" />
			<isset property="sys.M2_HOME" />
		</and>
	</condition>

	<condition property="mvn.executable" value="mvn.bat">
		<and>
			<os family="windows" />
			<not>
				<isset property="sys.M2_HOME" />
			</not>
		</and>
	</condition>

	<condition property="mvn.executable" value="${sys.M2_HOME}/bin/mvn">
		<and>
			<not>
				<os family="windows" />
			</not>
			<isset property="sys.M2_HOME" />
		</and>
	</condition>

	<condition property="mvn.executable" value="mvn">
		<and>
			<not>
				<os family="windows" />
			</not>
			<not>
				<isset property="sys.M2_HOME" />
			</not>
		</and>
	</condition>

	<target name="build-core" description="" depends="checkout-sources">
		<property name="core.profiles" value="deploy-module-wildfly,deploy-configuration-wildfly" />
		<exec failonerror="true" executable="${mvn.executable}" dir="${ant.file.restcomm.release}/../checkout/core">
			<arg line="install -Dmaven.test.skip=true -Drelease.dir=${release.dir} -Djboss.home=${wildfly.home} -Djboss.path=../../${wildfly.home.relative.path} -Pset-git-hash,${core.profiles}" />
		</exec>
		<!--
		<exec failonerror="true" executable="${mvn.executable}" dir="${ant.file.restcomm.release}/../checkout/core">
			<arg line="javadoc:aggregate -DreportOutputDirectory=${release.dir}/docs/container -DdestDir=javadoc" />
		</exec>
		-->
	</target>

	<target name="release-wildfly" depends="clean,get-wildfly,unzip-wildfly,setup-wildfly,build-core">
		<tstamp>
			<format property="time.stamp" pattern="yyyyMMdd-HHmm" />
		</tstamp>
		<delete dir="." includes="${release.profile}-slee-${release.version}-${wildfly.name}-${wildfly.version}}.zip" />
		<antcall target="zip-wildfly">
			<param name="zip.filename" value="${release.profile}-slee-${release.version}-${wildfly.name}-${wildfly.version}.zip" />
			<param name="wildfly.home" value="${wildfly.home}" />
		</antcall>
		<delete dir="${wildfly.home}" failonerror="true" />
		<antcall target="clean" />
	</target>

	<target name="clean">
		<delete dir="${output.dir}" />
	</target>

	<target name="get-wildfly" unless="got.wildfly">
		<echo message="Downloading WildFly ${wildfly.version}"/>
		<get verbose="true" dest="${ant.file.restcomm.release}/../${wildfly.distro.zip.path}" src="http://download.jboss.org/wildfly/${wildfly.version}/wildfly-${wildfly.version}.zip" />
	</target>

	<target name="unzip-wildfly">
		<delete dir="${wildfly.home}" failonerror="true" />
		<unzip src="${wildfly.distro.zip.path}" dest="${release.dir}" />
	</target>

	<target name="setup-wildfly">
		<property name="wildfly.modules" value="${wildfly.home}/modules/system/layers/base/" />

		<echo message="Downloading last H2 database ${wildfly.version}"/>
		<mkdir dir="${tmp.dir}"/>
		<get verbose="true" dest="${tmp.dir}/${h2.distro.jar.path}" src="http://repo2.maven.org/maven2/com/h2database/h2/${h2.version}/h2-${h2.version}.jar" />

		<delete><fileset dir="${wildfly.modules}/com/h2database/h2/main/" includes="**/*.jar"/></delete>
		<copy file="${tmp.dir}/${h2.distro.jar.path}" todir="${wildfly.modules}/com/h2database/h2/main/"/>
		<replaceregexp file="${wildfly.modules}/com/h2database/h2/main/module.xml"
					   match="&lt;resource-root path=(.*)/&gt;"
					   replace="&lt;resource-root path=&quot;${h2.distro.jar.path}&quot;/&gt;"
					   byline="true"
		/>

		<replace casesensitive="false" file="${wildfly.home}/standalone/configuration/standalone.xml">
			<replacetoken><![CDATA[<connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>]]></replacetoken>
			<replacevalue><![CDATA[<connection-url>jdbc:h2:~/test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>]]></replacevalue>
		</replace>
	</target>
	
	<target name="checkout-sources">
		<echo>Checking out sources</echo>
		<delete dir="${packages.dir}" />
		<exec failonerror="true" executable="${mvn.executable}" dir="${ant.file.restcomm.release}/../">
			<arg line="validate -Pcheckout -Dcheckout.basedir=${packages.dir} -Dcore.scmVersion=${jslee.version}" />
			<!--<arg line="validate -Pcheckout -Dcheckout.basedir=${packages.dir} ${validate.versions}" />-->
		</exec>
	</target>

	<target name="zip-wildfly" description="">
		<fixcrlf srcdir="${wildfly.home}/bin" includes="*.sh" eol="lf" eof="remove" />
		<zip destfile="${ant.file.restcomm.release}/../${zip.filename}" filesonly="false">
			<zipfileset dir="${release.dir}" prefix="${release.profile}-slee-${release.version}-${wildfly.name}-${wildfly.version}" filemode="755" includes="**/*.sh" />
			<zipfileset dir="${release.dir}" prefix="${release.profile}-slee-${release.version}-${wildfly.name}-${wildfly.version}" />
		</zip>
	</target>


</project>
